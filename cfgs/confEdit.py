from django import forms
from django.utils.safestring import mark_safe

import re

# list of available tracks
TRACKS = (
    ('misano', 'Misano'),
    ('paul_ricard', 'Paul Ricard'),
    ('nurburgring', 'Nuerburgring GP'),
)


def fieldForKey(key):
    # list of fields that get special treatment, other fields are autogenerated
    if key == 'trackName':
        return forms.ChoiceField(
            widget=forms.Select,
            choices=TRACKS,
        )
    if key == 'sessionType':
        return forms.IntegerField(max_value=None, min_value=0)
    return forms.FloatField()


def createLabel(key):
    """ create label from json key, ie thisIsAKey -> This Is A Key """
    key = key[0].upper()+key[1:]
    return ' '.join(re.findall('[A-Z][^A-Z]*', key))


def createForm(obj, path):
    """ create a form form the objs keys, pre-filled with its values """

    # if the object is a list, create a form for each item
    if isinstance(obj, list):
        return [createForm(obj[i],'%s/%i'%(path,i)) for i in range(len(obj))]

    # if the object is a integer, create a temporary object and proceed
    if isinstance(obj, int):
        obj = {'value': obj}

    # iterate over the objects elements and add fields to the form
    form = forms.Form()
    for key, value in sorted(obj.items(), key=lambda x:x[0]):
        # if the element is a object itself, let the form display a link to further drilldown into this object
        if (isinstance(value, dict)):
            form.fields[key] = forms.CharField(widget=forms.TextInput,
                                               disabled=True,
                                               label=mark_safe('<a href="/cfgs/%s/%s">%s</a>'%(path,key,key)))

        else:
            form.fields[key] = fieldForKey(key)
            form.fields[key].label = createLabel(key)
            form.fields[key].initial = value
            form.fields[key].required = True

        print(value)
    return form